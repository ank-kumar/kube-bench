---
controls:
version: 1.6
id: 1
text: "Master Node Security Configuration"
type: "master"
groups:
- id: 1.1
  text: "API Server"
  checks:
  - id: 1.1.1
    text: "Ensure that the --anonymous-auth argument is set to false (Scored)"
    type: "skip"
    scored: true

  - id: 1.1.2
    text: "Ensure that the --basic-auth-file argument is not set (Scored)"
    audit: "grep -A2 basic-auth-file /etc/origin/master/master-config.yaml"
    tests:
      test_items:
      - flag: "--basic-auth-file"
        compare:
          op: eq
          value: ""
        set: false
    remediation: |
      Edit the kubernetes master config file /etc/origin/master/master-config.yaml and
      remove the basic-auth-file entry.

      kubernetesMasterConfig:
        apiServerArguments:
           basic-auth-file:
             - /path/to/any/file
    scored: true

  - id: 1.1.3
    text: "Ensure that the --insecure-allow-any-token argument is not set (Scored)"
    type: "skip"
    scored: true

  - id: 1.1.4
    text: "Ensure that the --kubelet-https argument is set to true (Scored)"
    audit: "grep -A4 kubeletClientInfo /etc/origin/master/master-config.yaml"
    tests:
      bin_op: and
      test_items:
      - flag: "kubeletClientInfo:"
        compare:
          op: eq
          value: "kubeletClientInfo:"
        set: true
      - flag: "ca: ca-bundle.crt"
        compare:
          op: eq
          value: "ca-bundle.crt"
        set: true
      - flag: "certFile: master.kubelet-client.crt"
        compare:
          op: eq
          value: "certFile: master.kubelet-client.crt"
        set: true
      - flag: "keyFile: master.kubelet-client.key"
        compare:
          op: eq
          value: "keyFile: master.kubelet-client.key"
        set: true
      - flag: "port: 10250"
        compare:
          op: eq
          value: "port: 10250"
        set: true
    remediation: |
      Edit the kubernetes master config file /etc/origin/master/master-config.yaml
      and change it to match the below.

      kubeletClientInfo:
        ca: ca-bundle.crt
        certFile: master.kubelet-client.crt
        keyFile: master.kubelet-client.key
        port: 10250
    scored: true

  - id: 1.1.5
    text: "Ensure that the --insecure-bind-address argument is not set (Scored)"
    audit: "grep -A2 insecure-bind-address /etc/origin/master/master-config.yaml"
    tests:
      test_items:
      - flag: "insecure-bind-address"
        set: false
    remediation: |
      Edit the kubernetes master config file /etc/origin/master/master-config.yaml
      and remove the insecure-bind-address entry.

      kubernetesMasterConfig:
        apiServerArguments:
           insecure-bind-address:
           - 127.0.0.1
    scored: true

  - id: 1.1.6
    text: "Ensure that the --insecure-port argument is set to 0 (Scored)"
    audit: "grep -A2 insecure-port /etc/origin/master/master-config.yaml"
    tests:
      test_items:
      - flag: "insecure-port"
        set: false
    remediation: |
     Edit the kubernetes master config file /etc/origin/master/master-config.yaml
     and remove the insecure-port entry.

     kubernetesMasterConfig:
       apiServerArguments:
         insecure-port:
         - 0
    scored: true

  - id: 1.1.7
    text: "Ensure that the --secure-port argument is not set to 0 (Scored)"
    audit: "grep -A2 secure-port /etc/origin/master/master-config.yaml"
    tests:
      bin_op: or
      test_items:
      - flag: "secure-port"
        set: false
      - flag: "secure-port"
        compare:
          op: nothave
          value: "0"
        set: true
    remediation: |
     Edit the kubernetes master config file /etc/origin/master/master-config.yaml
     and either remove the secure-port parameter or set it to a different (non-zero)
     desired port.

     kubernetesMasterConfig:
       apiServerArguments:
         secure-port:
         - 8443
    scored: true

  - id: 1.1.8
    text: "Ensure that the --profiling argument is set to false (Scored)"
    type: "skip"
    scored: true

  - id: 1.1.9
    text: "Ensure that the --repair-malformed-updates argument is set to false (Scored)"
    audit: "grep -A2 repair-malformed-updates /etc/origin/master/master-config.yaml"
    tests:
      bin_op: or
      test_items:
      - flag: "repair-malformed-updates"
        set: false
      - flag: "repair-malformed-updates"
        compare:
          op: have
          value: "true"
        set: true
    remediation: |
     Edit the kubernetes master config file /etc/origin/master/master-config.yaml
     and remove the repair-malformed-updates entry or set repair-malformed-updates=true.
    scored: true

  - id: 1.1.10
    text: "Ensure that the admission control plugin AlwaysAdmit is not set (Scored)"
    audit: "grep -A4 AlwaysAdmit /etc/origin/master/master-config.yaml"
    tests:
      test_items:
      - flag: "AlwaysAdmit"
        set: false
    remediation: |
      Edit the kubernetes master config file /etc/origin/master/master-config.yaml
      and remove the the entry below.

      AlwaysAdmit:
        configuration:
          kind: DefaultAdmissionConfig
          apiVersion: v1
          disable: false
    scored: true

  - id: 1.1.11
    text: "Ensure that the admission control plugin AlwaysPullImages is set (Scored)"
    audit: "grep -A4 AlwaysPullImages /etc/origin/master/master-config.yaml"
    tests:
      bin_ops: and
      test_items:
      - flag: "AlwaysPullImages"
        compare:
          op: has
          value: "AlwaysPullImages"
        set: true
      - flag: "disable"
        compare:
          op: has
          value: "false"
    remediation: |
      Edit the kubernetes master config file /etc/origin/master/master-config.yaml
      and add the the entry below.

      admissionConfig:
        pluginConfig:
          AlwaysPullImages:
            configuration:
              kind: DefaultAdmissionConfig
              apiVersion: v1
              disable: false
    scored: true

  - id: 1.1.12
    text: "Ensure that the admission control plugin DenyEscalatingExec is set (Scored)"
    type: "skip"
    scored: true

  - id: 1.1.13
    text: "Ensure that the admission control plugin SecurityContextDeny is set (Scored)"
    type: "skip"
    scored: true

  - id: 1.1.14
    text: "Ensure that the admission control plugin NamespaceLifecycle is set (Scored)"
    audit: "grep -A4 NamespaceLifecycle $apiserverconf"
    tests:
      test_items:
      - flag: "NamespaceLifecycle"
        set: false
    remediation: |
      Edit the kubernetes master config file $apiserverconf
      and remove the following entry.

      NamespaceLifecycle: 
        configuration:
          kind: DefaultAdmissionConfig
          apiVersion: v1
          disable: true
    scored: true

  - id: 1.1.15
    text: "Ensure that the --audit-log-path argument is set as appropriate (Scored)"
    audit: "grep -A5 auditConfig $apiserverconf"
    tests:
      bin_op: and
      test_items:
      - flag: "auditConfig"
        compare:
          op: has
          value: "auditConfig"
        set: true
      - flag: "enabled: true"
        compare:
          op: eq
          value: "enabled: true"
        set: true
    remediation: |
      Edit the Openshift master config file $apiserverconf, update the following entry and restart the API server.

      auditConfig:
        auditFilePath: "/var/log/audit-ocp.log"
        enabled: true
        maximumFileRetentionDays: 10
        maximumFileSizeMegabytes: 100
        maximumRetainedFiles: 10

      Make the same changes in the inventory/ansible variables so the changes are not
      lost when an upgrade occurs.
    scored: true

  - id: 1.1.16
    text: "Ensure that the --audit-log-maxage argument is set to 30 or as appropriate (Scored)"
    audit: "grep -A5 auditConfig $apiserverconf"
    tests:
      bin_op: and
      test_items:
      - flag: "auditConfig"
        compare:
          op: has
          value: "auditConfig"
        set: true
      - flag: "maximumFileRetentionDays"
        compare:
          op: has
          value: "maximumFileRetentionDays"
        set: true
    remediation: |
      Edit the Openshift master config file $apiserverconf,
      update the maximumFileRetentionDays entry and restart the API server.

      auditConfig:
        auditFilePath: "/var/log/audit-ocp.log"
        enabled: true
        maximumFileRetentionDays: 10
        maximumFileSizeMegabytes: 100
        maximumRetainedFiles: 10

      Make the same changes in the inventory/ansible variables so the changes are not
      lost when an upgrade occurs.
    scored: true

  - id: 1.1.17
    text: "Ensure that the --audit-log-maxbackup argument is set to 10 or as appropriate (Scored)"
    audit: "grep -A5 auditConfig $apiserverconf"
    tests:
      bin_op: and
      test_items:
      - flag: "enabled: true"
        compare:
          op: has
          value: "enabled: true"
        set: true
      - flag: "maximumRetainedFile"
        compare:
          op: has
          value: "maximumRetainedFile"
        set: true
    remediation: |
      Edit the Openshift master config file $apiserverconf, update the maximumRetainedFiles entry,
      set enabled to true and restart the API server.

      auditConfig:
        auditFilePath: "/var/log/audit-ocp.log"
        enabled: true
        maximumFileRetentionDays: 10
        maximumFileSizeMegabytes: 100
        maximumRetainedFiles: 10

      Make the same changes in the inventory/ansible variables so the changes are not
      lost when an upgrade occurs.
    scored: true

  - id: 1.1.18
    text: "Ensure that the --audit-log-maxsize argument is set to 100 or as appropriate (Scored)"
    audit: "grep -A5 auditConfig $apiserverconf"
    tests:
      bin_op: and
      test_items:
      - flag: "enabled: true"
        compare:
          op: has
          value: "enabled: true"
        set: true
      - flag: "maximumFileSizeMegabytes"
        compare:
          op: has
          value: "maximumFileSizeMegabytes"
        set: true
    remediation: |
      Edit the Openshift master config file $apiserverconf, update the maximumFileSizeMegabytes entry,
      set enabled to true and restart the API server.

      auditConfig:
        auditFilePath: "/var/log/audit-ocp.log"
        enabled: true
        maximumFileRetentionDays: 10
        maximumFileSizeMegabytes: 100
        maximumRetainedFiles: 10

      Make the same changes in the inventory/ansible variables so the changes are not
      lost when an upgrade occurs.
    scored: true

  - id: 1.1.19
    text: "Ensure that the --authorization-mode argument is not set to AlwaysAllow (Scored)"
    audit: "grep -A1 authorization-mode $apiserverconf"
    tests:
      test_items:
      - flag: "authorization-mode"
        set: false
    remediation: |
      Edit the Openshift master config file $apiserverconf and remove the authorization-mode
      entry.

      kubernetesMasterConfig:
        apiServerArguments:
           authorization-mode:
             - AllowAll
    scored: true

  - id: 1.1.20
    text: "Ensure that the --token-auth-file parameter is not set (Scored)"
    audit: "grep token-auth-file /etc/origin/master/master-config.yaml"
    tests:
      test_items:
      - flag: "token-auth-file"
        set: false
    remediation: |
      Edit the Openshift master config file $apiserverconf and remove the token-auth-file
      entry under apiserverArguments section.

      kubernetesMasterConfig:
        apiServerArguments:
           token-auth-file:
             - /path/to/file
    scored: true

  - id: 1.1.21
    text: "Ensure that the --kubelet-certificate-authority argument is set as appropriate (Scored)"
    audit: "grep -A1 kubelet-certificate-authority $apiserverconf"
    tests:
      test_items:
      - flag: "kubelet-certificate-authority"
        set: false
    remediation: |
      Edit the Openshift master config file $apiserverconf and remove the following
      configuration under apiserverArguments section.

      kubernetesMasterConfig:
        apiServerArguments:
           kubelet-certificat-authority:
             - /path/to/ca
    scored: true

  - id: 1.1.22
    text: "Ensure that the --kubelet-client-certificate and --kubelet-client-key arguments are set as appropriate (Scored)"
    audit: "grep -A4 kubeletClientInfo $apiserverconf"
    tests:
      bin_op: and
      test_items:
      - flag: "kubeletClientInfo"
        compare:
          op: has
          value: "kubeletClientInfo"
        set: true
      - flag: "keyFile: master.kubelet-client.key"
        compare:
          op: has
          value: "keyFile: master.kubelet-client.key"
        set: true
      - flag: "certFile: master.kubelet-client.crt"
        compare:
          op: has
          value: "certFile: master.kubelet-client.crt"
        set: true
    remediation: |
      Edit the Openshift master config file $apiserverconf and add the following
      configuration under kubeletClientInfo

      kubeletClientInfo:
        ca: ca-bundle.crt
        certFile: master.kubelet-client.crt
        keyFile: master.kubelet-client.key
        port: 10250
    scored: true

  - id: 1.1.23
    text: "Ensure that the --service-account-lookup argument is set to true"
    type: skip
    scored: true

  - id: 1.1.24
    text: "Ensure that the admission control plugin PodSecurityPolicy is set (Scored)"
    type: "skip"
    scored: true

  - id: 1.1.25
    text: "Ensure that the --service-account-key-file argument is set as appropriate (Scored)"
    audit: "grep -A9 serviceAccountConfig $apiserverconf"
    tests:
      bin_op: and
      test_items:
      - flag: "privateKeyFile: serviceaccounts.private.key"
        compare:
          op: has
          value: "privateKeyFile: serviceaccounts.private.key"
        set: true
      - flag: "serviceaccounts.public.key"
        compare:
          op: has
          value: "serviceaccounts.public.key"
        set: true
    remediation: |
      OpenShift API server does not use the service-account-key-file argument. 
      Even if value is set in master-config.yaml, it will not be used to verify 
      service account tokens, as it is in upstream Kubernetes. The ServiceAccount 
      token authenticator is configured with serviceAccountConfig.publicKeyFiles in 
      the master-config.yaml. OpenShift does not reuse the apiserver TLS key.

      Edit the Openshift master config file $apiserverconf and set the privateKeyFile 
      and publicKeyFile configuration under serviceAccountConfig.

        serviceAccountConfig:
          limitSecretReferences: false
          managedNames:
            - default
            - builder
            - deployer
          masterCA: ca-bundle.crt
          privateKeyFile: serviceaccounts.private.key
          publicKeyFiles:
            - serviceaccounts.public.key

      Verify that privateKeyFile and publicKeyFile exist and set.
    scored: true

  - id: 1.1.26
    text: "Ensure that the --etcd-certfile and --etcd-keyfile arguments are set as appropriate (Scored)"
    audit: "grep -A3 etcdClientInfo $apiserverconf"
    tests:
      bin_op: and
      test_items:
      - flag: "certFile: master.etcd-client.crt"
        compare:
          op: has
          value: "certFile: master.etcd-client.crt"
        set: true
      - flag: "keyFile: master.etcd-client.key"
        compare:
          op: has
          value: "keyFile: master.etcd-client.key"
        set: true
    remediation: |
      Edit the Openshift master config file $apiserverconf and set keyFile and certFile 
      under etcdClientInfo like below.
      
        etcdClientInfo:
          ca: master.etcd-ca.crt
          certFile: master.etcd-client.crt
          keyFile: master.etcd-client.key
    scored: true

  - id: 1.1.27
    text: "Ensure that the admission control plugin ServiceAccount is set (Scored)"
    audit: "grep -A4 ServiceAccount $apiserverconf"
    tests:
      bin_op: or
      test_items:
      - flag: "ServiceAccount"
        set: false
      - flag: "disabled: false"
        compare:
          op: has
          value: "disabled: false"
        set: true
    remediation: |
      Edit the Openshift master config file $apiserverconf and enable ServiceAccount
      admission control policy.
      
        ServiceAccount: 
          configuration:
            kind: DefaultAdmissionConfig
            apiVersion: v1
            disable: false
    scored: true

  - id: 1.1.28
    text: "Ensure that the --tls-cert-file and --tls-private-key-file arguments are set as appropriate (Scored)"
    audit: "grep -A7 servingInfo $apiserverconf"
    tests:
      bin_op: and
      test_items:
      - flag: "certFile: master.server.crt"
        compare:
          op: has
          value: "certFile: master.server.crt"
        set: true
      - flag: "keyFile: master.server.key"
        compare:
          op: has
          value: "keyFile: master.server.key"
        set: true
    remediation: |
      Edit the Openshift master config file $apiserverconf and set keyFile and certFile under servingInfo.

        servingInfo:
          bindAddress: 0.0.0.0:8443
          bindNetwork: tcp4
          certFile: master.server.crt
          clientCA: ca.crt
          keyFile: master.server.key
          maxRequestsInFlight: 500
          requestTimeoutSeconds: 3600
    scored: true

  - id: 1.1.29
    text: "Ensure that the --client-ca-file argument is set as appropriate (Scored)"
    audit: "grep -A7 servingInfo $apiserverconf"
    tests:
      test_items:
      - flag: "clientCA: ca.crt"
        compare:
          op: has
          value: "clientCA: ca.crt"
        set: true
    remediation: |
      Edit the Openshift master config file $apiserverconf and set clientCA under servingInfo.

        servingInfo:
          bindAddress: 0.0.0.0:8443
          bindNetwork: tcp4
          certFile: master.server.crt
          clientCA: ca.crt
          keyFile: master.server.key
          maxRequestsInFlight: 500
          requestTimeoutSeconds: 3600
    scored: true

  # 1.1.30 in the Aquasec shared doc does not match CIS k8s v1.3.0
  - id: 1.1.30
    text: "Ensure that the --etcd-cafile argument is set as appropriate (Scored)"
    audit: "grep -A3 etcdClientInfo $apiserverconf"
    tests:
      test_items:
      - flag: "ca: master.etcd-ca.crt"
        compare:
          op: has
          value: "ca: master.etcd-ca.crt"
        set: true
    remediation: |
      Edit the Openshift master config file $apiserverconf and set ca under etcdClientInfo.

        etcdClientInfo:
          ca: master.etcd-ca.crt
          certFile: master.etcd-client.crt
          keyFile: master.etcd-client.key
    scored: true

  - id: 1.1.31
    text: "Ensure that the --etcd-cafile argument is set as appropriate (Scored)"
    type: "skip"
    scored: true

  - id: 1.1.32
    text: "Ensure that the --authorization-mode argument is set to Node (Scored)"
    audit: "grep -A4 NodeRestriction $apiserverconf"
    tests:
      bin_op: or
      test_items:
      - flag: "NodeRestriction"
        set: false
      - flag: "disable: false"
        compare:
          op: has
          value: "disable: false"
        set: true
    remediation: |
      Edit the Openshift master config file $apiserverconf and enable NodeRestriction ca under etcdClientInfo.

        NodeRestriction:
          configuration:
            kind: DefaultAdmissionConfig
            apiVersion: v1
            disable: false
    scored: true

  # 1.1.33 in Aquasec shared doc is 1.1.34 in CIS k8s v1.3.0
  - id: 1.1.33
    text: "Ensure that the --experimental-encryption-provider-config argument is set as appropriate (Scored)"
    audit: "grep -A1 experimental-encryption-provider-config $apiserverconf"
    tests:
      test_items:
      - flag: "experimental-encryption-provider-config:"
        compare:
          op: has
          value: "experimental-encryption-provider-config:"
        set: true
    remediation: |
      Follow the instructions in the documentation to configure encryption. 
      https://docs.openshift.com/container-platform/3.10/admin_guide/encrypting_data.html
    scored: true

  - id: 1.1.34
    text: "Ensure that the encryption provider is set to aescbc (Scored)"
    audit: "grep -A1 'experimental-encryption-provider-config' $apiserverconf | cut -d':' -f2 | tr -d '\n -' | xargs grep -A1 providers"
    tests:
      test_items:
      - flag: "aescbc"
        compare:
          op: has
          value: "aescbc"
        set: true
    remediation: |
      Edit the Openshift master config file $apiserverconf and set aescbc as the first provider in encryption provider config.
      See https://docs.openshift.com/container-platform/3.10/admin_guide/encrypting_data.html.
    scored: true

  - id: 1.1.35
    text: "Ensure that the admission control policy is set to EventRateLimit (Scored)"
    audit: "grep -A4 EventRateLimit $apiserverconf"
    tests:
      test_items:
      - flag: "disabled: false"
        compare:
          op: has
          value: "disabled: false"
        set: true
    remediation: |
      Follow the documentation to enable the EventRateLimit plugin.
      https://docs.openshift.com/container-platform/3.10/architecture/additional_concepts/admission_controllers.html#admission-controllers-general-admission-rules 
    scored: true

  - id: 1.1.36
    text: "Ensure that the AdvancedAuditing argument is not set to false (Scored)"
    audit: "grep AdvancedAuditing $apiserverconf"
    tests:
      bin_op: or
      test_items:
      - flag: "AdvancedAuditing"
        compare:
          op: eq
          value: "true"
        set: true
      - flag: "AdvancedAuditing"
        set: false
    remediation: |
      Edit the Openshift master config file $apiserverconf and enable AdvancedAuditing,

      kubernetesMasterConfig:
        apiServerArguments:
          feature-gates:
            - AdvancedAuditing=true
    scored: true

  # Review 1.1.37 in Aquasec shared doc, the tests are net zero.
  - id: 1.1.37
    text: "Ensure that the --request-timeout argument is set as appropriate (Scored)"
    audit: "grep request-timeout $apiserverconf"
    type: manual
    remediation: |
      change the request-timeout value in the  /etc/origin/master/master-config.yaml
    scored: true

  # 1.1.38 is missing in Aquasec shared doc but exists in CIS k8s v1.3.0
  
